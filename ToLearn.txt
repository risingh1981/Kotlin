1) For Flatten-Array - I hacked it. Learn proper recursion in Kotlin to flatten List.
Good Example: Does it with/without flatmap
// without using flatMap
object Flattener {
    fun flatten(source: Collection<Any?>): List<Any> =
        source.fold(listOf()) { acc, elem ->
            acc + when (elem) {
                is Collection<Any?> -> flatten(elem)
                null -> listOf()
                else -> listOf(elem)
            }
        }
}

// uses flatMap
object Flattener1 {
    fun flatten(source: Collection<Any?>): List<Any> =
        source.flatMap {
            when (it) {
                is Collection<Any?> -> flatten(it)
                null -> listOf()
                else -> listOf(it)
            }
        }
}
=====================================================================================================